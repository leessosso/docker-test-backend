name: Backend Deploy Pipeline

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/franchise-backend:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/franchise-backend:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/franchise-backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/franchise-backend:buildcache,mode=max

  deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create production env file
        run: |
          cat << EOF > .env.production
          DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}
          PORT=5000
          NODE_ENV=production
          DB_HOST=${{ secrets.DB_HOST }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_NAME=${{ secrets.DB_NAME }}
          CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}
          EOF

      - name: Copy deployment files via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "docker-compose.prod.yml,deploy.sh,.env.production"
          target: "C:\\Users\\lee\\franchise-backend"
          strip_components: 0

      - name: Execute remote deployment script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            wsl -e bash -c "cd /mnt/c/Users/lee/franchise-backend && bash deploy.sh" 